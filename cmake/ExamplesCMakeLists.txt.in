cmake_minimum_required(VERSION 3.20)

project(binancecpp_examples
    VERSION @PROJECT_VERSION@
    DESCRIPTION "Examples for binancecpp library"
    LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find binancecpp
find_package(binancecpp REQUIRED)

# Example executables
set(EXAMPLES
    example
    example_aggTrades
    example_depthCache
    example_klines
    example_template
    example_userStream
    example_wapi
)

foreach(EXAMPLE_NAME ${EXAMPLES})
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${EXAMPLE_NAME}.cpp)
        add_executable(${EXAMPLE_NAME} ${EXAMPLE_NAME}.cpp)

        # Set C++20 standard for examples
        set_target_properties(${EXAMPLE_NAME} PROPERTIES
            CXX_STANDARD 20
            CXX_STANDARD_REQUIRED ON
            CXX_EXTENSIONS OFF
        )

        target_link_libraries(${EXAMPLE_NAME}
            PRIVATE
                binancecpp::binancecpp
        )

        # C++20 compile options
        target_compile_options(${EXAMPLE_NAME} PRIVATE
            $<$<CXX_COMPILER_ID:GNU>:-fconcepts>
            $<$<CXX_COMPILER_ID:Clang>:-fconcepts-ts>
        )
    endif()
endforeach()
